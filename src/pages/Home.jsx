import React from "react";
import Categories from "../components/Catigories";
import Sort, { list } from "../components/Sort";
import PizzaBlock from "../components/PizzaBlock/PizzaBlock";
import Skeleton from "../components/PizzaBlock/Skeleton";
import AppContext from "../context";
import Pagination from "../components/Pagination/Pagination";
import { useNavigate } from "react-router-dom";
import { useSelector, useDispatch } from "react-redux";
import {
  setCategoryId,
  setCurrentPage,
  setFilters,
} from "../app/slice/filterSlice";
import qs from "qs";
import { fetchPizzas } from "../app/slice/pizzaSlice";

const Home = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const isSearch = React.useRef(false); //–Ω—É–∂–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ useEffect –µ—Å–ª–∏ –≤ –ø–∞—Ä–∞–º—Å–∞—Ö –µ—Å—Ç—å —á—Ç–æ —Ç–æ —Ç–æ –Ω–µ –¥–µ–ª–∞—Ç—å 2 –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –±–µ–∫
  const isMounted = React.useRef(false); // –Ω—É–∂–µ–Ω —á—Ç–æ –±—ã –∫–æ–≥–¥–∞ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —Ä–µ–Ω–¥–∞—Ä–µ–º —Ç–æ –≤ url –Ω–µ –≤–ø–∏—Å—ã–≤–∞–ª http://localhost:3001/?sortProperty=rating&categoryId=0& //–∞ –æ—Å—Ç–∞–≤–ª—è–ª http://localhost:3001/

  ///////// —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º1111 //12:55
  const { categoryId, sort, currentPage } = useSelector(
    (state) => state.filterSlice
  );
  const { items, status } = useSelector((state) => state.pizzaSlice);

  const onChangeCategory = (id) => {
    dispatch(setCategoryId(id));
  };

  const onChangePage = (number) => {
    dispatch(setCurrentPage(number));
  };

  // –ø–æ–∏—Å–∫ –ø–∏—Ü—Ü
  const { searchValu } = React.useContext(AppContext);
  const filteredItems = items.filter((item) =>
    item.title.toLowerCase().includes(searchValu.toLowerCase())
  );

  const getPizzas = async () => {
    const order = sort.sortProperty.includes("-") ? "asc" : "desc";
    const sortBy = sort.sortProperty.replace("-", "");
    const category = categoryId > 0 ? `category=${categoryId}` : "";
    const search = searchValu ? `search=${searchValu}` : ""; //–ø–æ–∏—Å–∫ –Ω–∞ –±–µ–∫–µ
    dispatch(
      fetchPizzas({
        order,
        sortBy,
        category,
        search,
        currentPage,
      })
    );
  };

  // –≤–æ—Ç —ç—Ç–æ—Ç –≤ –≤–≤–µ—Ä—Ö –≤ url –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–µ—Ä—Ö—É —Å–∞–π—Ç–∞ 15 –≤–∏–¥–µ–æ 2) –µ—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä —Ç–æ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞  –Ω—É–∂–Ω–æ  –≤—à–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ url
  React.useEffect(() => {
    if (isMounted.current) {
      const qeryString = qs.stringify({
        sortProperty: sort.sortProperty,
        categoryId,
        currentPage,
      });
      navigate(`?${qeryString}`);
    }
    isMounted.current = true;
  }, [sort.sortProperty, categoryId, currentPage]);

  //–¥–µ–ª–∞–µ–º —á—Ç–æ –±—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–µ –ø—Ä–æ–ø–∞–¥–∞–ª–∞ 15 –≤–∏–¥–µ–æ //1)–µ—Å–ª–∏ –±—ã–ª 1 —Ä–µ–Ω–¥–µ—Ä —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ä–µ–¥–∞–∫—Å
  React.useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1));
      const sortlist = list.find(
        (obj) => obj.sortProperty === params.sortProperty
      );
      dispatch(setFilters({ ...params, sortlist }));
      isSearch.current = true; //–¥–æ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π useEffect –≤–Ω–∏–∑—É, —Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤ –ø–∞—Ä–∞–º—Å–∞—Ö –∞ –ø–æ—Ç–æ–º –≤–Ω–∏–∑—É –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é fetchPizzas
    }
  }, []);

  // –µ—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä, —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∏—Ü—Ü—ã
  React.useEffect(() => {
    window.scrollTo(0, 0); // –∫–æ–≥–¥–∞ —Å –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä–µ—Ö–æ–∂—É –≤ —ç—Ç—É —Ç–æ –æ–∫–∞–≤–∞—é—Å—å –≤–≤–µ—Ä—Ö—É
    if (!isSearch.current) {
      //–µ—Å–ª–∏ —É –Ω–∞—Å –Ω–µ—Ç –ø–æ–∏—Å–∫–∞ !isSearch.current=true
      getPizzas();
    }
    isSearch.current = false;
  }, [sort.sortProperty, categoryId, searchValu, currentPage]);

  return (
    <>
      <div className="content__top">
        <Categories
          items={items}
          activeCategory={categoryId}
          setActiveCategory={onChangeCategory}
        />
        <Sort />
      </div>
      <h2 className="content__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>

      {status === "error" ? (
        <div className="content__error-info">
          <h2>
            –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ <icon>üòï</icon>
          </h2>
          <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Ç—Ü—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ</p>
        </div>
      ) : (
        <div className="content_items">
          {
            //–µ—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ 6 undefined –∏ –∑–∞–º–µ–Ω–µ–º –∏—Ö –Ω–∞ —Å–∫–µ–ª–µ—Ç–æ–Ω—ã –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –æ—Ç–æ–±—Ä–æ–∂–∞–µ–º –ø–∏—Ü—Ü—ã
            status === "loading"
              ? [...new Array(8)].map((_, index) => <Skeleton key={index} />)
              : filteredItems.map((i, index) => (
                  <PizzaBlock key={index} {...i} />
                ))
          }
        </div>
      )}

      <Pagination currentPage={currentPage} onChangePage={onChangePage} />
    </>
  );
};

export default Home;

//setActiveCategory={(i)=>setActiveCategory(i)} –∫–æ–≥–¥–∞ –≤ Catigories –º—ã  –≤—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é i –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ–ø—Å –≤ —ç—Ç—É —Ñ—É–Ω–∫

//    axios.get(
// 	`https://63fa6b3d897af748dcced24c.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&order=${order}${search}`
// 	)
// 	.then((res)=>{
// 		setItams(res.data)
// 		setIsLoading(false)
// 	})
